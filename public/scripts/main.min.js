(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

// utils

var _capitalise = require('./utilities/capitalise');

var _capitalise2 = _interopRequireDefault(_capitalise);

var _model = require('./modules/model');

var _model2 = _interopRequireDefault(_model);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// classses
var modules = {
    Model: _model2.default
};

/**
* Initalize requiried JS from data attribures found in page HTML.
*
* @constructor
* @param {object} window - Global object referance.
* @param {object} document - Document object referance.
* @param {object} undefined - Ensure undefined remains valueless.
*/


// modules
(function (window, document, undefined) {

    // find all data js
    var module_array = document.querySelectorAll('[data-js-init]');

    // for each data attribue
    [].forEach.call(module_array, function (module) {

        // get class name
        var className = (0, _capitalise2.default)(module.getAttribute('data-js-init'));

        // start
        var moduleInstance = new modules[className](module);
        moduleInstance.init();
    });
})(window, document);

},{"./modules/model":2,"./utilities/capitalise":3}],2:[function(require,module,exports){
'use strict';

/**
 * Launches full page model.
 *
 * @constructor
 * @param {object} the origin module that launches the model
 */

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Model = function () {
    function Model(context) {
        _classCallCheck(this, Model);

        this.context = context;
    }

    _createClass(Model, [{
        key: 'init',
        value: function init() {
            console.log('init');
        }
    }]);

    return Model;
}();

exports.default = Model;

},{}],3:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = capitalise;
function capitalise(string) {
    return string.charAt(0).toUpperCase() + string.slice(1);
}

},{}]},{},[1]);
