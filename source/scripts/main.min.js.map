{"version":3,"sources":["../_js/_model-launch.js","../_js/init.js","../_js/_model-template.js"],"names":["elementHasClass","className","event","currentTarget","classList","contains","LaunchModel","module","this","originModule","bindEvents","prototype","launchButton","querySelector","addEventListener","handleEvent","preventDefault","ModelTemplate","selector","template","template-window","close","model-active","module_template","document","modelWindowTemplate","content","setPage","createModel","defineElements","body","add","appendModel","create_model","createElement","parentNode","innerHTML","insertAdjacentHTML","modelWindow","closeButton","closeModel","removeModel","resetPage","removeChild","remove","String","capitalizeFirstLetter","charAt","toUpperCase","slice","window","onload","module_array","querySelectorAll","forEach","call","new_object","getAttribute"],"mappings":"AAAA,YCUA,SAASA,iBAAiBC,GACtB,MAAOC,OAAMC,cAAcC,UAAUC,SAASJ,GDJlD,GAAIK,aAAc,SAAUC,GACxBC,KAAKC,aAAeF,EACpBC,KAAKE,aAMTJ,aAAYK,UAAUD,WAAa,WAE/B,GAAIE,GAAeJ,KAAKC,aAAaI,cAAc,oBACnDD,GAAaE,iBAAiB,QAASN,OAQ3CF,YAAYK,UAAUI,YAAc,SAAUb,GAC1CA,EAAMc,iBAEN,GAAIC,eEtBR,IAAIA,eAAgB,WAGhBT,KAAKU,UACDC,SAAY,oBACZC,kBAAmB,4BACnBC,MAAS,2BACTC,eAAgB,gBAIpB,IAAIC,GAAkBC,SAASX,cAAc,IAAML,KAAKU,SAAmB,SAC3EV,MAAKiB,oBAAsBF,EAAgBG,QAAQb,cAAc,IAAML,KAAKU,SAAS,oBAGrFV,KAAKmB,UACLnB,KAAKoB,YAAYpB,KAAKqB,eAAgBrB,KAAKE,YAO/CO,eAAcN,UAAUgB,QAAU,WAC9BH,SAASM,KAAK1B,UAAU2B,IAAIvB,KAAKU,SAAS,kBAS9CD,cAAcN,UAAUiB,YAAc,SAAUC,EAAgBnB,GAG5DF,KAAKwB,cAGLxB,KAAKqB,iBACLrB,KAAKE,cAOTO,cAAcN,UAAUqB,YAAc,WAElC,GAAIC,GAAeT,SAASU,cAAc,MAC1CD,GAAezB,KAAKiB,oBAAoBU,WAAWC,UACnDZ,SAASM,KAAKO,mBAAmB,aAAcJ,IAOnDhB,cAAcN,UAAUkB,eAAiB,WAErCrB,KAAK8B,YAAcd,SAASX,cAAc,IAAML,KAAKU,SAAS,oBAC9DV,KAAK+B,YAAc/B,KAAK8B,YAAYzB,cAAc,IAAML,KAAKU,SAAgB,QAOjFD,cAAcN,UAAUD,WAAa,WAGjCF,KAAK+B,YAAYzB,iBAAiB,QAASN,OAQ/CS,cAAcN,UAAUI,YAAc,SAAUb,GAC5CA,EAAMc,iBAGFhB,gBAAgBQ,KAAKU,SAAgB,QAAIV,KAAKgC,cAQtDvB,cAAcN,UAAU6B,WAAa,WACjChC,KAAKiC,cACLjC,KAAKkC,aAOTzB,cAAcN,UAAU8B,YAAc,WAClCjC,KAAK8B,YAAYH,WAAWQ,YAAYnC,KAAK8B,cAOjDrB,cAAcN,UAAU+B,UAAY,WAChClB,SAASM,KAAK1B,UAAUwC,OAAOpC,KAAKU,SAAS,kBD9GjD2B,OAAOlC,UAAUmC,sBAAwB,WACrC,MAAOtC,MAAKuC,OAAO,GAAGC,cAAgBxC,KAAKyC,MAAM,IASrDC,OAAOC,OAAS,WAGZ,GAAIC,GAAe5B,SAAS6B,iBAAiB,qBAG1CC,QAAQC,KAAKH,EAAc,SAAU7C,GAGpC,GAAIiD,GAAajD,EAAOkD,aAAa,gBAAgBX,uBAGrD,IAAII,QAAOM,GAAYjD","file":"main.min.js","sourcesContent":["'use strict';\n/**\n * Launches full page model.\n *\n * @constructor\n * @param {object} the origin module that launches the model\n */\nvar LaunchModel = function (module) {\n    this.originModule = module;\n    this.bindEvents();\n}\n/**\n * Attach all events.\n *\n */\nLaunchModel.prototype.bindEvents = function () {\n\n    var launchButton = this.originModule.querySelector('.js-model__launch');\n    launchButton.addEventListener('click', this);\n}\n/**\n * Handle all events.\n *\n * @param {event} event - Prevent default behavour.\n * @return {object} ModelTemplate - The appended model.\n */\nLaunchModel.prototype.handleEvent = function (event) {\n    event.preventDefault();\n\n    new ModelTemplate ();\n}\n","'use strict';\n\n// UTIL\n// ADD ES6 module patteren please!\n\n// capitalize first letter of a string\nString.prototype.capitalizeFirstLetter = function () {\n    return this.charAt(0).toUpperCase() + this.slice(1);\n}\n\nfunction elementHasClass (className) {\n    return event.currentTarget.classList.contains(className);\n}\n\n// INIT\n// after page load\nwindow.onload = function () {\n\n    // find all data js\n    var module_array = document.querySelectorAll('[data-js-init]');\n\n    // for each data attribue\n    [].forEach.call(module_array, function (module) {\n\n        // get js module name\n        var new_object = module.getAttribute('data-js-init').capitalizeFirstLetter();\n\n        // start\n        new window[new_object](module);\n\n    });\n};\n","'use strict';\n\n/**\n * Builds full page model from template in HTML.\n *\n * @constructor\n */\nvar ModelTemplate = function () {\n\n    // selectors\n    this.selector = {\n        'template': 'js-model-template',\n        'template-window': 'js-model-template__window',\n        'close': 'js-model-template__close',\n        'model-active': 'model__active'\n    }\n\n    // get template parts\n    var module_template = document.querySelector('#' + this.selector['template']);\n    this.modelWindowTemplate = module_template.content.querySelector('.' + this.selector['template-window']);\n\n    // go to work\n    this.setPage();\n    this.createModel(this.defineElements, this.bindEvents);\n}\n\n/**\n * Set page styling for takeover style model.\n *\n */\nModelTemplate.prototype.setPage = function () {\n    document.body.classList.add(this.selector['model-active']);\n}\n\n/**\n * Control functions that create model and setup page.\n *\n * @param {functionCallback} defineElements - Store created elements to instance.\n * @param {functionCallback} bindEvents - Bind events to created elements.\n */\nModelTemplate.prototype.createModel = function (defineElements, bindEvents) {\n\n    // add model to page\n    this.appendModel();\n\n    // callbacks on model\n    this.defineElements();\n    this.bindEvents();\n}\n\n/**\n * Append model to page.\n *\n */\nModelTemplate.prototype.appendModel = function () {\n\n    var create_model = document.createElement('div');\n    create_model = this.modelWindowTemplate.parentNode.innerHTML;\n    document.body.insertAdjacentHTML('afterbegin', create_model);\n}\n\n/**\n * Store created elements to instance.\n *\n */\nModelTemplate.prototype.defineElements = function () {\n\n    this.modelWindow = document.querySelector('.' + this.selector['template-window']);\n    this.closeButton = this.modelWindow.querySelector('.' + this.selector['close']);\n}\n\n/**\n * Bind events to created elements.\n *\n */\nModelTemplate.prototype.bindEvents = function () {\n\n    // close button\n    this.closeButton.addEventListener('click', this);\n}\n\n/**\n * Handle events.\n *\n * @param {object} event - To prevent any default behaviour, detemine origin of event and/or the event type.\n */\nModelTemplate.prototype.handleEvent = function (event) {\n    event.preventDefault();\n\n    // close button\n    if (elementHasClass(this.selector['close'])) this.closeModel();\n\n}\n\n/**\n * Control functions that remove model and reset page\n *\n */\nModelTemplate.prototype.closeModel = function () {\n    this.removeModel();\n    this.resetPage();\n}\n\n/**\n * Remove model HTML.\n *\n */\nModelTemplate.prototype.removeModel = function () {\n    this.modelWindow.parentNode.removeChild(this.modelWindow);\n}\n\n/**\n * Reset page styling.\n *\n */\nModelTemplate.prototype.resetPage = function () {\n    document.body.classList.remove(this.selector['model-active']);\n}\n"]}