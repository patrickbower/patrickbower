{"version":3,"sources":["../_js/_model.js","../_js/init.js"],"names":["Model","module","this","prototype","launch","event","preventDefault","console","log","String","capitalizeFirstLetter","charAt","toUpperCase","slice","window","onload","moduleArray","document","querySelectorAll","forEach","call","newObject","getAttribute","instance","elementArray","element","split","dataset","model","eventType","toString","functionName","addEventListener"],"mappings":"AAAA,YAEA,IAAIA,OAAQ,SAASC,GACjB,MAAOC,MAGXF,OAAMG,UAAUC,OAAS,WAErBC,MAAMC,iBAENC,QAAQC,IAAI,WAAYN,OCN5BO,OAAON,UAAUO,sBAAwB,WACrC,MAAOR,MAAKS,OAAO,GAAGC,cAAgBV,KAAKW,MAAM,IAMrDC,OAAOC,OAAS,WAGZ,GAAIC,GAAcC,SAASC,iBAAiB,qBAGzCC,QAAQC,KAAKJ,EAAa,SAASf,GAGlC,GAAIoB,GAAYpB,EAAOqB,aAAa,gBAAgBZ,wBAGhDa,EAAW,GAAIT,QAAOO,GAGtBG,EAAevB,EAAOiB,iBAAiB,mBAGxCC,QAAQC,KAAKI,EAAc,SAASC,GAGnC,GAAIC,GAAQD,EAAQE,QAAQC,MAAMF,MAAM,MAGpCG,EAAYH,EAAM,GAAGI,WAGrBC,EAAeL,EAAM,GAAGI,UAG5BL,GAAQO,kBAAkBH,GAAY,WAClCN,EAASQ","file":"main.min.js","sourcesContent":["'use strict';\n\nvar Model = function(module) {\n    return this;\n}\n\nModel.prototype.launch = function() {\n\n    event.preventDefault();\n\n    console.log('do stuff', this);\n}\n","'use strict';\n\n// UTIL - ES6 module patteren please!\n\nString.prototype.capitalizeFirstLetter = function() {\n    return this.charAt(0).toUpperCase() + this.slice(1);\n}\n\n// INIT\n\n// after page load\nwindow.onload = function() {\n\n    // find all data js\n    var moduleArray = document.querySelectorAll('[data-js-init]');\n\n    // for each data attribue\n    [].forEach.call(moduleArray, function(module) {\n\n        // get js module name\n        var newObject = module.getAttribute('data-js-init').capitalizeFirstLetter();\n\n        // create and return new object\n        var instance = new window[newObject]();\n\n        // get modules data attribues\n        var elementArray = module.querySelectorAll('[data-model]');\n\n        // for each one found\n        [].forEach.call(elementArray, function(element) {\n\n            // break into componant parts\n            var split = element.dataset.model.split('--');\n\n            // get the event type to trigger\n            var eventType = split[0].toString();\n\n            // get function to invoke\n            var functionName = split[1].toString();\n\n            // create the event listener\n            element.addEventListener([eventType], function(){\n                instance[functionName]();\n            });\n\n        });\n\n    });\n}\n"]}