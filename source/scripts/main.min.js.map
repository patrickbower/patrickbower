{"version":3,"sources":["../_js/_model-launch.js","../_js/init.js","../_js/_model-template.js"],"names":["elementHasClass","className","event","currentTarget","classList","contains","LaunchModel","module","this","originModule","bindEvents","prototype","launchButton","querySelector","addEventListener","handleEvent","preventDefault","ModelTemplate","selector","close","module_template","document","modelWindowTemplate","content","createModel","defineElements","appendModel","create_model","createElement","parentNode","innerHTML","body","insertAdjacentHTML","modelWindow","closeButton","closeModel","removeChild","String","capitalizeFirstLetter","charAt","toUpperCase","slice","window","onload","module_array","querySelectorAll","forEach","call","new_object","getAttribute"],"mappings":"AAAA,YCmBA,SAASA,iBAAiBC,GACtB,MAAOC,OAAMC,cAAcC,UAAUC,SAASJ,GDblD,GAAIK,aAAc,SAAUC,GACxBC,KAAKC,aAAeF,EACpBC,KAAKE,aAMTJ,aAAYK,UAAUD,WAAa,WAE/B,GAAIE,GAAeJ,KAAKC,aAAaI,cAAc,oBACnDD,GAAaE,iBAAiB,QAASN,OAQ3CF,YAAYK,UAAUI,YAAc,SAAUb,GAC1CA,EAAMc,iBAEN,GAAIC,eEtBR,IAAIA,eAAgB,WAGhBT,KAAKU,UACDC,MAAQ,2BAIZ,IAAIC,GAAkBC,SAASR,cAAc,qBAC7CL,MAAKc,oBAAsBF,EAAgBG,QAAQV,cAAc,8BAGjEL,KAAKgB,YAAYhB,KAAKiB,eAAgBjB,KAAKE,YAS/CO,eAAcN,UAAUa,YAAc,SAAUC,EAAgBf,GAG5DF,KAAKkB,cAGLlB,KAAKiB,iBACLjB,KAAKE,cAOTO,cAAcN,UAAUe,YAAc,WAElC,GAAIC,GAAeN,SAASO,cAAc,MAC1CD,GAAenB,KAAKc,oBAAoBO,WAAWC,UACnDT,SAASU,KAAKC,mBAAmB,aAAcL,IAOnDV,cAAcN,UAAUc,eAAiB,WAErCjB,KAAKyB,YAAcZ,SAASR,cAAc,8BAC1CL,KAAK0B,YAAc1B,KAAKyB,YAAYpB,cAAc,8BAOtDI,cAAcN,UAAUD,WAAa,WAGjCF,KAAK0B,YAAYpB,iBAAiB,QAASN,OAQ/CS,cAAcN,UAAUI,YAAc,SAAUb,GAC5CA,EAAMc,iBAGFhB,gBAAgBQ,KAAKU,SAASC,QAAQX,KAAK2B,cAQnDlB,cAAcN,UAAUwB,WAAa,WACjC3B,KAAKyB,YAAYJ,WAAWO,YAAY5B,KAAKyB,cDxEjDI,OAAO1B,UAAU2B,sBAAwB,WACrC,MAAO9B,MAAK+B,OAAO,GAAGC,cAAgBhC,KAAKiC,MAAM,IAUrDC,OAAOC,OAAS,WAGZ,GAAIC,GAAevB,SAASwB,iBAAiB,qBAG1CC,QAAQC,KAAKH,EAAc,SAAUrC,GAGpC,GAAIyC,GAAazC,EAAO0C,aAAa,gBAAgBX,uBAGrD,IAAII,QAAOM,GAAYzC","file":"main.min.js","sourcesContent":["'use strict';\n/**\n * Launches full page model.\n *\n * @constructor\n * @param {object} the origin module that launches the model\n */\nvar LaunchModel = function (module) {\n    this.originModule = module;\n    this.bindEvents();\n}\n/**\n * Attach all events.\n *\n */\nLaunchModel.prototype.bindEvents = function () {\n\n    var launchButton = this.originModule.querySelector('.js-model__launch');\n    launchButton.addEventListener('click', this);\n}\n/**\n * Handle all events.\n *\n * @param {event} event - Prevent default behavour.\n * @return {object} ModelTemplate - The appended model.\n */\nLaunchModel.prototype.handleEvent = function (event) {\n    event.preventDefault();\n\n    new ModelTemplate ();\n}\n","'use strict';\n\n/*\nCoding Standards - code convensions\n\n• Open brances on same line.\n• Whitespace before braces and brakets of functions.\n• Capitalize first letter for constructor functions.\n• Varabules all lowercase with underscores for word breaks unless global or values not changing and then all caps.\n• Private Varabules start with an underscore.\n*/\n\n// UTIL - ES6 module patteren please!\n\n// capitalize first letter of a string\nString.prototype.capitalizeFirstLetter = function () {\n    return this.charAt(0).toUpperCase() + this.slice(1);\n}\n\nfunction elementHasClass (className) {\n    return event.currentTarget.classList.contains(className);\n}\n\n// INIT\n\n// after page load\nwindow.onload = function () {\n\n    // find all data js\n    var module_array = document.querySelectorAll('[data-js-init]');\n\n    // for each data attribue\n    [].forEach.call(module_array, function (module) {\n\n        // get js module name\n        var new_object = module.getAttribute('data-js-init').capitalizeFirstLetter();\n\n        // start\n        new window[new_object](module);\n\n    });\n};\n","'use strict';\n\n/**\n * Builds full page model from template in HTML.\n *\n * @constructor\n */\nvar ModelTemplate = function () {\n\n    // selectors\n    this.selector = {\n        close : 'js-model-template__close'\n    }\n\n    // get template parts\n    var module_template = document.querySelector('#js-model-template');\n    this.modelWindowTemplate = module_template.content.querySelector('.js-model-template__window');\n\n    // go to work\n    this.createModel(this.defineElements, this.bindEvents);\n}\n\n/**\n * Model controller.\n *\n * @param {functionCallback} defineElements - Store created elements to instance.\n * @param {functionCallback} bindEvents - Bind events to created elements.\n */\nModelTemplate.prototype.createModel = function (defineElements, bindEvents) {\n\n    // add model to page\n    this.appendModel();\n\n    // callbacks on model\n    this.defineElements();\n    this.bindEvents();\n}\n\n/**\n * Append model to page.\n *\n */\nModelTemplate.prototype.appendModel = function () {\n\n    var create_model = document.createElement('div');\n    create_model = this.modelWindowTemplate.parentNode.innerHTML;\n    document.body.insertAdjacentHTML('afterbegin', create_model);\n}\n\n/**\n * Store created elements to instance.\n *\n */\nModelTemplate.prototype.defineElements = function () {\n\n    this.modelWindow = document.querySelector('.js-model-template__window');\n    this.closeButton = this.modelWindow.querySelector('.js-model-template__close');\n}\n\n/**\n * Bind events to created elements.\n *\n */\nModelTemplate.prototype.bindEvents = function () {\n\n    // close button\n    this.closeButton.addEventListener('click', this);\n}\n\n/**\n * Handle events.\n *\n * @param {object} event - To prevent any default behaviour, detemine origin of event and/or the event type.\n */\nModelTemplate.prototype.handleEvent = function (event) {\n    event.preventDefault();\n\n    // close button\n    if (elementHasClass(this.selector.close)) this.closeModel();\n\n}\n\n/**\n * Close model.\n *\n */\nModelTemplate.prototype.closeModel = function () {\n    this.modelWindow.parentNode.removeChild(this.modelWindow);\n}\n"]}