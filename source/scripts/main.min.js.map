{"version":3,"sources":["../../resources/js/_model-launch.js","../../resources/js/_util.js","../../resources/js/_model-template.js","../../resources/js/init.js"],"names":["ajaxRequest","url","callback","request","XMLHttpRequest","open","onload","status","responseText","send","parseHTML","htmlString","html","document","implementation","createHTMLDocument","documentElement","innerHTML","body","LaunchModel","module","this","selector","launch-button","model-template","model-window","originModule","storeTemplate","bindEvents","prototype","module_template","querySelector","modelWindowTemplate","content","instance","launch_button_event","handleEvent","event","preventDefault","createModel","launchButton","addEventListener","launchHref","href","ModelTemplate","model-close","model-active","model-content","setPage","defineElements","classList","add","appendModel","addContent","create_model","createElement","parentNode","insertAdjacentHTML","modelWindow","closeButton","modelContent","close_button_event","closeModel","full_url","split","page_url","fragment_selector","data","html_fragment","appendChild","removeModel","resetPage","removeChild","remove","window","undefined","module_array","querySelectorAll","forEach","call","new_object","getAttribute"],"mappings":"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","file":"main.min.js","sourcesContent":["'use strict';\n/**\n * Launches full page model.\n *\n * @constructor\n * @param {object} the origin module that launches the model\n */\nvar LaunchModel = function (module) {\n\n    // selectors\n    this.selector = {\n        'launch-button': 'js-model__launch',\n        'model-template': 'js-model-template',\n        'model-window': 'js-model-template__window',\n    }\n\n    this.originModule = module;\n    this.storeTemplate()\n    this.bindEvents();\n}\n\n/**\n * Fetch and keep model template in memory.\n *\n */\nLaunchModel.prototype.storeTemplate = function () {\n\n    var module_template = document.querySelector('#' + this.selector['model-template']);\n    this.modelWindowTemplate = module_template.content.querySelector('.' + this.selector['model-window']);\n}\n\n/**\n * Attach all events.\n *\n */\nLaunchModel.prototype.bindEvents = function () {\n    var instance = this;\n\n    var launch_button_event = {\n        handleEvent: function(event) {\n            event.preventDefault();\n            instance.createModel();\n        }\n    }\n\n    this.launchButton = this.originModule.querySelector('.' + this.selector['launch-button']);\n    this.launchButton.addEventListener('click', launch_button_event);\n}\n\n/**\n * Create a model.\n *\n * @return {object} ModelTemplate - The appended model.\n */\nLaunchModel.prototype.createModel = function () {\n\n    this.launchHref = this.launchButton.href;\n    new ModelTemplate (this);\n}\n","'use strict';\n\n/**\n* Simple XHR utility.\n*\n* @param {string} url - The request source.\n* @param {callback} callback - The callback of data recieved.\n*/\nfunction ajaxRequest (url, callback) {\n\n    var request = new XMLHttpRequest();\n    request.open('GET', url, true);\n\n    request.onload = function() {\n        if (request.status >= 200 && request.status < 400) {\n            callback(request.responseText);\n        }\n    };\n\n    request.send();\n}\n\n/**\n* Simple HTML parser utility.\n*\n* @param {string} url - The request source.\n* @param {callback} callback - The callback of data recieved.\n*/\nfunction parseHTML (htmlString) {\n    var html = document.implementation.createHTMLDocument(\"example\");\n    html.documentElement.innerHTML = htmlString;\n    return html.body;\n}\n","'use strict';\n\n/**\n* Builds full page model from template stored on current page.\n*\n* @constructor\n* @param {LaunchModel} LaunchModel class - Dependency injection.\n*/\nvar ModelTemplate = function (LaunchModel) {\n\n    // dependency injection class\n    this.LaunchModel = LaunchModel;\n\n    // selectors\n    this.selector = {\n        'model-window': 'js-model-template__window',\n        'model-close': 'js-model-template__close',\n        'model-active': 'model__active',\n        'model-content': 'js-model-template__content'\n    }\n\n    // go to work\n    this.setPage();\n    this.createModel(this.defineElements, this.bindEvents);\n}\n\n/**\n* Set page styling for takeover style model.\n*\n*/\nModelTemplate.prototype.setPage = function () {\n    document.body.classList.add(this.selector['model-active']);\n}\n\n/**\n* Control functions that create model and setup page.\n*\n* @param {functionCallback} defineElements - Store created elements to instance.\n* @param {functionCallback} bindEvents - Bind events to created elements.\n*/\nModelTemplate.prototype.createModel = function (defineElements, bindEvents) {\n\n    this.appendModel();\n    this.defineElements();\n    this.bindEvents();\n    this.addContent();\n}\n\n/**\n* Append model to page.\n*\n*/\nModelTemplate.prototype.appendModel = function () {\n\n    var create_model = document.createElement('div');\n    create_model = this.LaunchModel.modelWindowTemplate.parentNode.innerHTML;\n    document.body.insertAdjacentHTML('afterbegin', create_model);\n}\n\n/**\n* Store created elements to instance.\n*\n*/\nModelTemplate.prototype.defineElements = function () {\n\n    this.modelWindow = document.querySelector('.' + this.selector['model-window']);\n    this.closeButton = this.modelWindow.querySelector('.' + this.selector['model-close']);\n    this.modelContent = this.modelWindow.querySelector('.' + this.selector['model-content']);\n}\n\n/**\n* Bind events to created elements - Using a handleEvent object to configure the function call.\n*\n*/\nModelTemplate.prototype.bindEvents = function () {\n    var instance = this;\n\n    var close_button_event = {\n        handleEvent: function(event) {\n            event.preventDefault();\n            instance.closeModel();\n        }\n    }\n\n    this.closeButton.addEventListener('click', close_button_event);\n}\n\n/**\n* Get content via Ajax and place in model window.\n*\n*/\nModelTemplate.prototype.addContent = function () {\n    var instance = this;\n\n    // get parts from href string\n    var full_url = this.LaunchModel.launchHref.split('#');\n    var page_url = full_url[0];\n    var fragment_selector = full_url[1];\n\n    // ajax (util function)\n    ajaxRequest(page_url, function(data){\n\n        // parse (util function), and append\n        var html = parseHTML(data);\n        var html_fragment = html.querySelector('.' + fragment_selector);\n\n        instance.modelContent.appendChild(html_fragment);\n    });\n}\n\n/**\n* Control functions that remove model and reset page\n*\n*/\nModelTemplate.prototype.closeModel = function () {\n    this.removeModel();\n    this.resetPage();\n}\n\n/**\n* Remove model HTML.\n*\n*/\nModelTemplate.prototype.removeModel = function () {\n    this.modelWindow.parentNode.removeChild(this.modelWindow);\n}\n\n/**\n* Reset page styling.\n*\n*/\nModelTemplate.prototype.resetPage = function () {\n    document.body.classList.remove(this.selector['model-active']);\n}\n","'use strict';\n\n/**\n* Initalize requiried JS from data attribures found in page HTML.\n*\n* @constructor\n* @param {object} window - Global object referance.\n* @param {object} document - Document object referance.\n* @param {object} undefined - Ensure undefined remains valueless.\n*/\n(function(window, document, undefined){\n\n    // find all data js\n    var module_array = document.querySelectorAll('[data-js-init]');\n\n    // for each data attribue\n    [].forEach.call(module_array, function (module) {\n\n        // get module name\n        var new_object = module.getAttribute('data-js-init');\n\n        // start\n        new window[new_object](module);\n\n    });\n\n})(this, document);\n"]}